import cron from 'node-cron';
import { IntrusionDetection } from '../intrusion-detection';
import { AuditLogger } from '../services/audit-logger';

const runSecurityTests = async (): Promise<void> => {
  try {
    // Create test payloads
    const testPayloads = [
      { type: 'sql', content: 'SELECT * FROM users' },
      { type: 'xss', content: '<script>alert("test")</script>' },
      { type: 'path', content: '../etc/passwd' }
    ];

    const ids = new IntrusionDetection();
    
    for (const payload of testPayloads) {
      const result = await new Promise((resolve) => {
        ids._transform(payload.content, 'utf8', (error: Error | null) => {
          resolve({ detected: !!error, payload });
        });
      });

      await AuditLogger.log(
        'security-test',
        'system',
        {
          testType: payload.type,
          detected: result.detected,
          timestamp: new Date().toISOString()
        },
        'info',
        `pentest-${Date.now()}`
      );
    }

    console.log('Security tests completed successfully');
  } catch (error) {
    console.error('Security test failed:', error);
    await AuditLogger.log(
      'security-test-error',
      'system',
      { error: error instanceof Error ? error.message : 'Unknown error' },
      'error',
      `pentest-error-${Date.now()}`
    );
  }
};

// Run security tests every 6 hours
cron.schedule('0 */6 * * *', runSecurityTests);

// Initial run
runSecurityTests();